name: 'Sync Template'
description: 'Sync template into a project and optionally create a pull request'
author: 'Thomas Schmelzer'

inputs:
  token:
    description: 'GitHub token or PAT for authentication'
    required: true
  template-repository:
    description: 'Template repository to sync from'
    required: true
  template-branch:
    description: 'Branch in the template repo'
    default: 'main'
  branch:
    description: 'Target branch in the current repo'
    default: 'sync/update'
  commit-message:
    description: 'Commit message for sync'
    default: 'chore: sync template'
  include:
    description: 'Files and folders to include (multi-line)'
    default: |
  exclude:
    description: 'Files and folders to exclude (multi-line)'
    default: |
  test-mode:
    description: 'If true, skip push and PR creation'
    default: 'false'

runs:
  using: "composite"
  steps:
    - name: Ensure inside a git repository
      shell: bash
      run: git rev-parse --is-inside-work-tree >/dev/null || { echo "❌ Not in a git repository"; exit 1; }

    - name: Sparse checkout template
      uses: actions/checkout@v5
      with:
        repository: ${{ inputs.template-repository }}
        ref: ${{ inputs.template-branch }}
        path: .template-temp
        sparse-checkout: ${{ inputs.include }}
        sparse-checkout-cone-mode: false
        fetch-depth: 0
        token: ${{ inputs.token }}
        persist-credentials: 'false'

    - name: Clean template and apply excludes
      shell: bash
      working-directory: .template-temp
      run: |
        rm -rf .git
        [[ -n "${{ inputs.exclude }}" ]] && while IFS= read -r item; do
          item="$(echo "$item" | xargs)"
          [ -z "$item" ] || rm -rf "$item" 2>/dev/null || true
        done <<< "${{ inputs.exclude }}"
        tree -L 2 || ls -R

    - name: Commit and optionally push changes
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
        TEST_MODE: ${{ inputs.test-mode }}
      run: |
        cp -R .template-temp/. .
        rm -rf .template-temp

        git add -A
        git status
        if git diff --cached --quiet; then
          echo "✅ No changes to commit"
          exit 0
        fi

        # Warn if workflow files are modified
        if git diff --cached --name-only | grep -q "^\.github/workflows/"; then
          echo "⚠️ Workflow files detected. Use PAT with 'workflow' scope."
        fi

        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git commit -m "${{ inputs.commit-message }}"

        # Configure remote with token
        git remote set-url origin "https://x-access-token:${{ inputs.token }}@github.com/${{ github.repository }}.git"

        echo "✅ Remote after reset (masked):"
        git remote -v | sed -E 's@(https://)[^@]+@\\1****@g'

        echo "🔁 Testing ls-remote with this token..."
        git ls-remote --heads origin || echo "❌ ls-remote failed"

        if [[ "${TEST_MODE}" == "true" ]]; then
          echo "🧪 Test mode: skipping push and PR creation"
        else
          echo "🚀 Pushing changes to branch '${{ inputs.branch }}'..."
          if git push origin "HEAD:${{ inputs.branch }}" --force-with-lease; then
            echo "✅ Sync complete"
          else
            echo "⚠️ Push failed. Check permissions."
            exit 1
          fi
        fi

    - name: Create Pull Request (if not in test mode)
      if: ${{ inputs.test-mode != 'true' }}
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ inputs.token }}
        branch: ${{ inputs.branch }}
        commit-message: ${{ inputs.commit-message }}
        title: "chore: sync template from ${{ inputs.template-repository }}@${{ inputs.template-branch }}"
        body: |
          This PR updates configuration files from
          [${{ inputs.template-repository }}@${{ inputs.template-branch }}](https://github.com/${{ inputs.template-repository }}/tree/${{ inputs.template-branch }}).
