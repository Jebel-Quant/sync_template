name: 'Sync Template'
description: 'Sync template into a project and optionally create a pull request'
author: 'Thomas Schmelzer'

inputs:
  token:
    description: 'GitHub token or PAT for authentication'
    required: true
  source:
    description: 'Path to the YAML configuration file containing template settings'
    required: true
  branch:
    description: 'Target branch in the current repo'
    default: 'sync/update'
  commit-message:
    description: 'Commit message for sync'
    default: 'chore: sync template'
  test-mode:
    description: 'If true, skip push and PR creation'
    default: 'false'

runs:
  using: "composite"
  steps:
    - name: Ensure inside a git repository
      shell: bash
      run: git rev-parse --is-inside-work-tree >/dev/null || { echo "‚ùå Not in a git repository"; exit 1; }

    - name: Parse configuration file
      shell: bash
      id: config
      run: |
        CONFIG_FILE="${{ inputs.source }}"
        echo "Reading configuration from ${CONFIG_FILE}"
        
        if [ ! -f "${CONFIG_FILE}" ]; then
          echo "::error::Configuration file not found: ${CONFIG_FILE}"
          exit 1
        fi
        
        # Install yq if not available
        if ! command -v yq &> /dev/null; then
          echo "Installing yq..."
          wget -qO /tmp/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          chmod +x /tmp/yq
          YQ_CMD="/tmp/yq"
        else
          YQ_CMD="yq"
        fi
        
        # Read values from config file
        TEMPLATE_REPO=$($YQ_CMD '.template-repository' "${CONFIG_FILE}")
        if [ "$TEMPLATE_REPO" = "null" ] || [ -z "$TEMPLATE_REPO" ]; then
          echo "::error::template-repository not found in ${CONFIG_FILE}"
          exit 1
        fi
        echo "template_repository=$TEMPLATE_REPO" >> $GITHUB_OUTPUT
        
        TEMPLATE_BRANCH=$($YQ_CMD '.template-branch // "main"' "${CONFIG_FILE}")
        echo "template_branch=$TEMPLATE_BRANCH" >> $GITHUB_OUTPUT
        
        # Read include and exclude patterns if present
        INCLUDE=$($YQ_CMD '.include // ""' "${CONFIG_FILE}")
        echo "include<<EOF" >> $GITHUB_OUTPUT
        echo "$INCLUDE" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
        EXCLUDE=$($YQ_CMD '.exclude // ""' "${CONFIG_FILE}")
        echo "exclude<<EOF" >> $GITHUB_OUTPUT
        echo "$EXCLUDE" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Sparse checkout template
      uses: actions/checkout@v5
      with:
        repository: ${{ steps.config.outputs.template_repository }}
        ref: ${{ steps.config.outputs.template_branch }}
        path: .template-temp
        sparse-checkout: ${{ steps.config.outputs.include }}
        sparse-checkout-cone-mode: false
        fetch-depth: 0
        token: ${{ inputs.token }}
        persist-credentials: 'false'

    - name: Clean template and apply excludes
      shell: bash
      working-directory: .template-temp
      run: |
        rm -rf .git
        if [[ -n "${{ steps.config.outputs.exclude }}" ]]; then
          while IFS= read -r item; do
            item="$(echo "$item" | xargs)"
            [ -z "$item" ] || rm -rf "$item" 2>/dev/null || true
          done <<< "${{ steps.config.outputs.exclude }}"
        fi
        tree -L 2 || ls -R

    - name: Commit and optionally push changes
      id: commit-changes
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
        TEST_MODE: ${{ inputs.test-mode }}
      run: |
        cp -R .template-temp/. .
        rm -rf .template-temp

        git add -A
        git status
        if git diff --cached --quiet; then
          echo "‚úÖ No changes to commit"
          echo "changes_detected=false" >> $GITHUB_OUTPUT
          exit 0
        fi
        
        echo "changes_detected=true" >> $GITHUB_OUTPUT

        # Warn if workflow files are modified
        if git diff --cached --name-only | grep -q "^\.github/workflows/"; then
          echo "‚ö†Ô∏è Workflow files detected. Use PAT with 'workflow' scope."
        fi

        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git commit -m "${{ inputs.commit-message }}"

        # Configure remote with token
        git remote set-url origin "https://x-access-token:${{ inputs.token }}@github.com/${{ github.repository }}.git"

        echo "‚úÖ Remote after reset (masked):"
        git remote -v | sed -E 's@(https://)[^@]+@\\1****@g'

        echo "üîÅ Testing ls-remote with this token..."
        git ls-remote --heads origin || echo "‚ùå ls-remote failed"

        if [[ "${TEST_MODE}" == "true" ]]; then
          echo "üß™ Test mode: skipping push and PR creation"
        else
          echo "üöÄ Pushing changes to branch '${{ inputs.branch }}'..."
          if git push origin "HEAD:${{ inputs.branch }}" --force-with-lease; then
            echo "‚úÖ Sync complete"
          else
            echo "‚ö†Ô∏è Push failed. Check permissions."
            exit 1
          fi
        fi

    - name: Create Pull Request (if not in test mode and there are changes)
      id: create-pr
      if: ${{ inputs.test-mode != 'true' && steps.commit-changes.outputs.changes_detected == 'true' }}
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ inputs.token }}
        branch: ${{ inputs.branch }}
        commit-message: ${{ inputs.commit-message }}
        title: "chore: sync template from ${{ steps.config.outputs.template_repository }}@${{ steps.config.outputs.template_branch }}"
        body: |
          This PR updates configuration files from
          [${{ steps.config.outputs.template_repository }}@${{ steps.config.outputs.template_branch }}](https://github.com/${{ steps.config.outputs.template_repository }}/tree/${{ steps.config.outputs.template_branch }}).
        delete-branch: true
