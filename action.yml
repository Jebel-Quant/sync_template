name: 'Sync Template'
description: 'Sync template into a project and optionally create a pull request'
author: 'Thomas Schmelzer'

inputs:
  branch:
    description: 'Branch to sync changes to in the target repo'
    default: 'sync/update-configs'
    required: false
  commit-message:
    description: 'Commit message for sync'
    default: 'chore: sync template'
    required: false
  template-repository:
    description: 'Repository to sync from'
    default: ''
    required: true
  template-branch:
    description: 'Branch to sync from in the template repo'
    default: 'main'
    required: false
  token:
    description: 'Token to use for authentication (PAT recommended)'
    required: true
  include:
    description: 'List of files and folders to include (multi-line)'
    default: |
      .devcontainer
      .github
      taskfiles
      tests
      .editorconfig
      .gitignore
      .pre-commit-config.yaml
      CODE_OF_CONDUCT.md
      CONTRIBUTING.md
      Makefile
      ruff.toml
      Taskfile.yml
    required: false
  exclude:
    description: 'List of files and folders to exclude (multi-line)'
    default: |
      .github/workflows/sync.yml
    required: false
  test-mode:
    description: 'If true, skip pushing changes and PR creation'
    default: 'false'
    required: false

runs:
  using: "composite"
  steps:
    - name: Ensure Git repository
      run: |
        git rev-parse --is-inside-work-tree > /dev/null || {
          echo "‚ùå Not in a git repository"
          exit 1
        }
      shell: bash

    - name: Sparse checkout from template repo
      uses: actions/checkout@v5
      with:
        repository: ${{ inputs.template-repository }}
        path: .template-temp
        ref: ${{ inputs.template-branch }}
        sparse-checkout: ${{ inputs.include }}
        sparse-checkout-cone-mode: false
        fetch-depth: 0

    - name: Remove .git folder of template repo
      working-directory: .template-temp
      shell: bash
      run: |
        rm -rf .git

    - name: Apply excludes
      if: ${{ inputs.exclude != '' }}
      working-directory: .template-temp
      shell: bash
      run: |
        echo "üîç Processing exclude list..."
        while IFS= read -r item; do
          item="$(echo "$item" | xargs)"
          [ -z "$item" ] && continue
          echo "  Excluding: $item"
          rm -rf "$item"
        done <<< "${{ inputs.exclude }}"

    - name: Commit and push changes
      shell: bash
      env:
          GITHUB_TOKEN: ${{ inputs.token }}
          TEST_MODE: ${{ inputs.test-mode }}
      run: |
          cp -R .template-temp/. .
          rm -R .template-temp
        
          git status
          git add -A
          if git diff --cached --quiet; then
          echo "‚úÖ No changes to commit"
          exit 0
          fi
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git commit -m "${{ inputs.commit-message }}"

          # Configure remote with token
          git remote set-url origin "https://x-access-token:${{ inputs.token }}@github.com/${{ github.repository }}.git"
        

          if [[ "${TEST_MODE}" == "true" ]]; then
          echo "üß™ Test mode enabled, skipping push"
          else
          echo "üöÄ Pushing changes to branch '${{ inputs.branch }}'..."
          git push origin "HEAD:${{ inputs.branch }}" --force-with-lease
          echo "‚úÖ Changes pushed"
          fi

    - name: Create Pull Request (if branch exists)
      if: steps.branch-exists.outputs.exists == 'true' && inputs.test-mode != 'true'
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ inputs.token }}
        branch: ${{ inputs.branch }}
        base: main
        title: "chore: sync template from ${{ inputs.template-repository }}@${{ inputs.template-branch }}"
        commit-message: "chore: sync template from ${{ inputs.template-repository }}@${{ inputs.template-branch }}"
        body: |
          This PR updates configuration files from `${{ inputs.template-repository }}@${{ inputs.template-branch }}`.
        delete-branch: true
        fail-on-no-changes: false
